<?php
/**
 * @file
 * Code for the Ktopic feature.
 */

include_once 'ktopic.features.inc';

function ktopic_field_info() {
  return array(
    'ktopic_name' => array(
      'label' => t('Ktopic Reference'),
      'description' => t("This field stores the ktopic name as reference identity."),
      'settings' => array('allowed_types' => array()),
      'default_widget' => 'options_select',
      'default_formatter' => 'ktopic_default',
    ),
  );
}

function ktopic_field_settings_form($field, $instance, $has_data) {
  $settings = $field['settings'];

  $form['allowed_types'] = array(
    '#type' => 'select',
    '#multiple' => TRUE,
    '#options' => ktopic_type_options(),
    '#default_value' => $settings['allowed_types'],
    '#title' => t('Allowed Topic Types'),
    '#size' => count(ktopic_type_options()),
  );

  return $form;
}

function ktopic_field_is_empty($item, $field) {
  if (empty($item['value']) && (string) $item['value'] !== '0') {
    return TRUE;
  }
  return FALSE;
}

function ktopic_field_widget_info_alter(&$info) {
  $widgets = array(
    'options_select' => array('ktopic_name'),
    'options_buttons' => array('ktopic_name'),
  );

  foreach ($widgets as $widget => $field_types) {
    $info[$widget]['field types'] = array_merge($info[$widget]['field types'], $field_types);
  }
}

function ktopic_field_formatter_info() {
  return array(
    'ktopic_default' => array(
      'label' => t('Default'),
      'field types' => array('ktopic_name'),
    ),
  );
}

function ktopic_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $element = array();

  return $element;
}

function ktopic_options_list($field, $instance, $entity_type, $entity) {
  $allowed_types = $settings = $field['settings']['allowed_types'];

  // @todo Support multi-lingual.
  $lang = LANGUAGE_NONE;

  $conds = array();
  if (!empty($allowed_types)) {
    $conds[] = array(
      'column' => 'value',
      'value' => array_keys($allowed_types),
      'operator' => 'IN',
    );
  }
  $node_ids = KtoolsEntityField::queryEntities('field_ktopic_type', $conds, 'node');
  $nodes = node_load_multiple($node_ids);
  $options_list = array();
  foreach ($nodes as $node) {
    $options_list[$node->field_ktopic_name[$lang][0]['machine']] = $node->title;
  }

  return $options_list;
}

/**
 * Return list of ktopic type options.
 *
 * @todo This use field ui to set field_ktopic_type 'allowed_values', consider
 * improving this by create a settings form to do it and this function use
 * variable_get_value('ktopic_type_options') to return the options list.
 */
function ktopic_type_options() {
  $field_ktopic_type_info = field_info_field('field_ktopic_type');

  return $field_ktopic_type_info['settings']['allowed_values'];
}
